#include <iostream>

using namespace std;

int main() {
	// указатели на константные переменные
	// const int value = 7;
	// int *ptr = value; // ошибка компиляции: невозможно конвертировать "const int*" в "int*"

	// указатели на константные значения
	// Указатель на константное значение - неконстантный указатель, который указывает на неизменное значение.
	// const int value = 7;
	// const int *ptr = &value; // здесь всё ок: ptr - это неконстантный указатель, который указывает на "const int"
	// *ptr = 11; // нельзя, мы не можем изменить константное значение

	// int value1 = 7;
	// const int *ptr = &value1; // ptr указывает на const int
	// *ptr = 10; // ptr обрабатывает value как константу, поэтому изменение значение переменной через ptr не допускается
	// value1 = 11; // но можно менять значение переменной value напрямую, так как переменная value не является константой

	// int value2 = 8;
	// ptr = &value2; // хорошо, ptr теперь указывает на другой const int

	// константные указатели
	// Константный указатель - указатель, значение которого не может быть изменено после инициализации
	// int value = 7;
	// int *const ptr = &value; // можно легко менять значение переменной value, но указатель ptr мы не можем поменять

	// константные указатели на константные значения
	int value = 7;
	const int *const ptr = &value; // не сможем поменять значение перменной value
	// *ptr = 10; // ptr обрабатывает value как константу, поэтому изменение значение переменной через ptr не допускается
	// value = 11; // но можно менять значение переменной value напрямую, так как переменная value не является константой	

	// Заключение
	/*
		- неконстантный указатель можно перенаправить, указывать на любой адрес
		- с помощью указателя на неконстантное значение можно изменить это же значение (на которое он указывает)
		- константный указатель всегда указывает на один и тот же адрес, и этот адрес не может быть изменен
		- указатель на константное значение обрабатывает значение как константное (даже если оно таковым не является), следовательно это значение через указатель изменить нельзя
	*/
	int someValue = 7;
	const int *ptr1 = &someValue; // ptr1 указывает на "const int", поэтому это указатель на константное значение
	int *const ptr2 = &someValue; // ptr2 указывает на "int", поэтому это константный указатель на неконстантное значение
	const int *const ptr3 = &someValue; // ptr3 указывает на "const int", поэтому это константный указатель на константное значение

	return 0;
}